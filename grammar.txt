statements				: statement statements
						| *empty*

statement				: expression
						| variableDef
						| functionDef
						| classDef
						| objectDef
						| conditional
						| include
						| comment

expression				: unary expression
						| *empty*

variableDef				: keyword:var VARIABLE  = variableExpression

functionDef				: keyword:func VARIABLE parameterExpression block

arrayDef				: keyword:array	VARIABLE initializerExpression

objectDef				: keyword:obj VARIABLE initializerExpression

conditional				: ifStatement
						| while

include					: keyword:include STRING

comment					: POUND *anything* POUND

unary					: INTEGER
						| STRING
						| anonymousExpression
						| objectExpression
						| variableExpression

binary                  : Plus
                        | Minus
                        | Multiply
                        | Divide
                        | GreaterThan
                        | GreaterThanEqual
                        | LessThan
                        | LessThanEqual
                        | EqualEqual
                        | ExclamationEqual

initializerExpression	: OPEN_PAREN expression CLOSE_PAREN

parameterExpression		: OPEN_PAREN optParameterList CLOSE_PAREN

variableExpression      : unary

block					: OPEN_CURLY statements CLOSE_CURLY

whileLoop				: keyword:while OPEN_PAREN expression CLOSE_PAREN block

ifStatement				: keyword:if OPEN_PAREN expression CLOSE_PAREN block optElse

anonymousExpression		: anonymousDefine
						| anonymousCall

objectExpression		: VARIABLE DOT VARIABLE
						| VARIABLE DOT VARIABLE objectExpression
						| VARIABLE DOT VARIABLE objectAssign
						| VARIABLE DOT VARIABLE initializerExpression

optParameterList		: VARIABLE optParameterList
						| *empty*

optElse					: keyword:else block
						: keyword:else ifStatement
						| *empty*

anonymousDefine			: keyword:anonymous parameterExpression block

optionalVariableAssign	: ASSIGN UNARY
						| *empty*

objectAssign			: ASSIGN UNARY
						| ASSIGN CLASS